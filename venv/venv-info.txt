
# VENV - virtual enviroment

виртуальная среда (virtual environment) в языке Python позволяет управлять проектами изолированно друг от друга, то есть
* у каждого проекта могут быть свои зависимости;
* зависимости одного проекта не влияют на зависимости другого проекта.
* каждый проект может требовать разную версию Python

Создавать виртуальное окружение в Python можно при помощи различных утилит. 

## Создание при помощи консоли:
Нужно открыть консоль ввести py -m venv "название среды" (без кавычек) 

после этого у вас появиться новая папка со средой, она появиться в папке в которой вызывалась команда в консоли 


## Активация виртуальной среды
Для активации нужно запустить файл Activate.bat из консоли 


после этого в строке ввода в консоль появиться надпись с названием среды в которой вы работаете 
## Выход из виртуальной среды

Для выхода из виртуальной среды необходимо выполнить команду: deactivate 




## Пакеты
Python 3.3+ поставляется с модулем venv. Для более старых версий Python можно использовать сторонний инструмент virtualenv.
Установите один из следующих пакетов:

* Python 3.3+: python
* Python 3: python-virtualenv


Для Pipenv:
* Python 3: python-pipenv


-------------------------------------------------------------------------------

Microsoft Windows [Version 10.0.22621.1555]
(c) Корпорация Майкрософт (Microsoft Corporation). Все права защищены.

C:\myFiles\univer\CalculusProcess\Python\venv>py -m venv my_venv

C:\myFiles\univer\CalculusProcess\Python\venv>.\my_venv\Scripts\activate

(my_venv) C:\myFiles\univer\CalculusProcess\Python\venv>deactivate
C:\myFiles\univer\CalculusProcess\Python\venv>


-------------------------------------------------------------------------------

Нужно, если нужна другая версия питона, или какие-то  библиотеки, которые не должны использоваться в других проектах
если запустить проект из виртуальной среды  с нужными библиотеками и запустить это же самое приложение в основном питоне,
но без библиотек ,которые есть в виртуальном питоне, то ничего не выйдет.


